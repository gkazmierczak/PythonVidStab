# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\gui\resultscreem.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtMultimedia import QMediaContent, QMediaPlayer
from PyQt5.QtMultimediaWidgets import QVideoWidget
from PyQt5.QtCore import QDir, Qt, QUrl
from PyQt5.QtWidgets import QStyle
from utils import durationFromMs

class ResultScreen(object):
    videoPath = None
    playbackPausedBySliderEvent=False
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        MainWindow.setStyleSheet("background-color: rgb(0, 8, 20);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lStatus = QtWidgets.QLabel(self.centralwidget)
        self.lStatus.setGeometry(QtCore.QRect(415, 20, 451, 40))
        self.lStatus.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 24pt \"MS Shell Dlg 2\";")
        self.lStatus.setAlignment(QtCore.Qt.AlignCenter)
        self.lStatus.setObjectName("lStatus")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(320, 100, 641, 381))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.mediaPlayer = QMediaPlayer()
        self.videoWidget = QVideoWidget(self.centralwidget)
        self.videoWidget.setGeometry(QtCore.QRect(320, 100, 640, 360))
        self.mediaPlayer.setVideoOutput(self.videoWidget)
        self.positionSlider = QtWidgets.QSlider(self.frame)
        self.positionSlider.setGeometry(QtCore.QRect(70, 360, 491, 22))
        self.positionSlider.setOrientation(QtCore.Qt.Horizontal)
        self.positionSlider.setObjectName("horizontalSlider")
        self.btnPlay = QtWidgets.QPushButton(self.frame)
        self.btnPlay.setGeometry(QtCore.QRect(0, 360, 24, 24))
        self.btnPlay.setStyleSheet("background-color: rgb(255, 195, 0);")
        self.btnPlay.setText("")
        self.btnPlay.setObjectName("btnPlay")
        self.btnPlay.setIcon(self.centralwidget.style().standardIcon(QStyle.SP_MediaPlay))
        self.lTime = QtWidgets.QLabel(self.frame)
        self.lTime.setGeometry(QtCore.QRect(570, 360, 72, 20))
        self.lTime.setStyleSheet("color: rgb(255, 255, 255);")
        self.lTime.setAlignment(QtCore.Qt.AlignCenter)
        self.lTime.setObjectName("lTime")
        self.btnStop = QtWidgets.QPushButton(self.frame)
        self.btnStop.setGeometry(QtCore.QRect(30, 360, 24, 24))
        self.btnStop.setStyleSheet("background-color: rgb(255, 195, 0);")
        self.btnStop.setText("")
        self.btnStop.setIcon(self.centralwidget.style().standardIcon(QStyle.SP_MediaStop))
        self.btnRestart = QtWidgets.QPushButton(self.centralwidget)
        self.btnRestart.setGeometry(QtCore.QRect(460, 520, 130, 40))
        self.btnRestart.setStyleSheet("background-color: rgb(0, 29, 61);\n"
"border: 1px solid rgb(255, 195, 0);\n"
"color: rgb(255, 195, 0);\n"
"font: 20pt \"MS Shell Dlg 2\";")
        self.btnRestart.setObjectName("btnRestart")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(970, 400, 300, 300))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 298, 298))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.btnClose = QtWidgets.QPushButton(self.centralwidget)
        self.btnClose.setGeometry(QtCore.QRect(690, 520, 90, 40))
        self.btnClose.setStyleSheet("background-color: rgb(0, 29, 61);\n"
"border: 1px solid rgb(255, 195, 0);\n"
"color: rgb(255, 195, 0);\n"
"font: 20pt \"MS Shell Dlg 2\";")
        self.btnClose.setObjectName("btnClose")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1280, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        if self.videoPath != None:
            self._setMedia()
            self.btnPlay.clicked.connect(self._play)
            self.btnStop.clicked.connect(self._stop)
            self.positionSlider.setTickInterval(100)
            self.mediaPlayer.setNotifyInterval(100)
            self.positionSlider.sliderPressed.connect(
                self._pausePlaybackSliderEvent)
            self.positionSlider.valueChanged.connect(self._updatePosition)
            self.positionSlider.sliderReleased.connect(
                self._resumePlaybackAfterSliderEvent)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.lStatus.setText(_translate("MainWindow", "Your video is ready"))
        self.btnRestart.setText(_translate("MainWindow", "Start over"))
        self.btnClose.setText(_translate("MainWindow", "Close"))

    def _setMedia(self):
        self.mediaPlayer.setMedia(QMediaContent(
            QUrl.fromLocalFile(self.videoPath)))
        self.mediaPlayer.setVideoOutput(self.videoWidget)
        self.mediaPlayer.stateChanged.connect(self._mediaStateChanged)
        self.mediaPlayer.positionChanged.connect(self._positionChanged)
        self.mediaPlayer.durationChanged.connect(self._durationChanged)
        self.mediaPlayer.pause()

    def _play(self):
        if self.mediaPlayer.state() == QMediaPlayer.PlayingState:
            self.mediaPlayer.pause()
        else:
            self.mediaPlayer.play()

    def _stop(self):
        self.mediaPlayer.stop()

    def _mediaStateChanged(self, state):
        if self.mediaPlayer.state() == QMediaPlayer.PlayingState:
            self.btnPlay.setIcon(self.centralwidget.style().standardIcon(QStyle.SP_MediaPause))
        else:
            self.btnPlay.setIcon(self.centralwidget.style().standardIcon(QStyle.SP_MediaPlay))


    def _positionChanged(self, position):
        self.positionSlider.blockSignals(True)
        self.positionSlider.setValue(position)
        self.positionSlider.blockSignals(False)
        self.lTime.setText(
            f"{durationFromMs(position)} / {durationFromMs(self.mediaPlayer.duration())}")

    def _durationChanged(self, duration):
        self.positionSlider.setRange(0, duration)
        self.lTime.setText(f"00:00 / {durationFromMs(duration)}")

    def _updatePosition(self):
        position = self.positionSlider.value()
        self.mediaPlayer.setPosition(position)
        self.lTime.setText(
            f"{durationFromMs(position)} / {durationFromMs(self.mediaPlayer.duration())}")

    def _pausePlaybackSliderEvent(self):
        if self.mediaPlayer.state() == QMediaPlayer.PlayingState:
            self.playbackPausedBySliderEvent = True
            self.mediaPlayer.pause()

    def _resumePlaybackAfterSliderEvent(self):
        if self.playbackPausedBySliderEvent:
            self.mediaPlayer.play()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = ResultScreen()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
